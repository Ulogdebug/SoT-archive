WARNING:objex.OBJEX_OT_export.execute: Scene uses view_transform='Filmic' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Recommended value: Standard
WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'E:\\SoTArchieve\\SoT-repo-main\\src\\object\\0x019A-RotatePlatformObj\\RotatePlatformObj.objex'
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0036 sec |   0.0021 sec) Finished writing geometry of 'RotatePlatformObj'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0148 sec |   0.0113 sec) Finished writing geometry of 'collision.RotatePlatformObj'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0159 sec |   0.0149 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Iron.019' name_q='"Iron.019"' material=<bpy_struct, Material("Iron.019") at 0x000002B2B2DEDC08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C50BCE08, evaluated>, 'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50BC408, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50C2C08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50C1808, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C50BCE08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50BDC08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50C2A08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50C2008, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50C2008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C50C1A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50C1808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C50C1A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50C2A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C50C2E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50C2C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C50C2E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50BDC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C50C3C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50BC408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C50C3C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images["ZELDA MAJORA'S MASK#4C766603#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images["ZELDA MAJORA'S MASK#4C766603#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images["ZELDA MAJORA'S MASK#4C766603#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images["ZELDA MAJORA'S MASK#4C766603#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images["ZELDA MAJORA'S MASK#4C766603#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Iron.007' name_q='"Iron.007"' material=<bpy_struct, Material("Iron.007") at 0x000002B2C574C288, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDEB1E08, evaluated>, 'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEB0808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDC40A08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDC41208, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDEB1E08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEB2008, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDC40408, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDC43008, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDC43008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDC42008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDC41208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDC42008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDC40408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDC42608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDC40A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDC42608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEB2008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDEB3C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEB0808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDEB3C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images["ZELDA MAJORA'S MASK#2AA995FB#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images["ZELDA MAJORA'S MASK#2AA995FB#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images["ZELDA MAJORA'S MASK#2AA995FB#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images["ZELDA MAJORA'S MASK#2AA995FB#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images["ZELDA MAJORA'S MASK#2AA995FB#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='IronWeb' name_q='"IronWeb"' material=<bpy_struct, Material("IronWeb") at 0x000002B2C5765D88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDEAA208, evaluated>, 'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEAA608, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEA9008, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEAA408, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDEAA208, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEAB808, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEA8408, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD94A08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD94A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDD94808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEAA408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDD94808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEA8408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDEA8C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEA9008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDEA8C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEAB808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDEA9E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDEAA608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDEA9E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images["ZELDA MAJORA'S MASK#9983B45F#2#1#632FA7EF_ciByRGBA.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images["ZELDA MAJORA'S MASK#9983B45F#2#1#632FA7EF_ciByRGBA.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images["ZELDA MAJORA'S MASK#9983B45F#2#1#632FA7EF_ciByRGBA.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images["ZELDA MAJORA'S MASK#9983B45F#2#1#632FA7EF_ciByRGBA.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images["ZELDA MAJORA'S MASK#9983B45F#2#1#632FA7EF_ciByRGBA.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.002' name_q='"Material.002"' material=<bpy_struct, Material("Material.002") at 0x000002B2C5764888, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7A7808, evaluated>, 'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7A4808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7A5408, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC732A08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7A7808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A6208, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A7E08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC733408, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC733408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC730C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC732A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC730C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A7E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7A5A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7A5408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7A5A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A6208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2DC7A4608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7A4808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2DC7A4608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.003' name_q='"Material.003"' material=<bpy_struct, Material("Material.003") at 0x000002B2DD106808, evaluated> face_img=None
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0251 sec |   0.0241 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0274 sec |   0.0264 sec) Objex Export Finished
