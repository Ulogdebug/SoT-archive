WARNING:objex.OBJEX_OT_export.execute: Scene uses view_transform='Filmic' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Recommended value: Standard
WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'E:\\RomhackTool\\z64rom\\src\\object\\0x0220-EnBoBObj\\BoB.objex'
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0165 sec |   0.0145 sec) Finished writing geometry of 'Body'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FlatBone, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0205 sec |   0.0030 sec) Finished writing geometry of 'FlatBone'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0215 sec |   0.0000 sec) Finished writing geometry of 'Armature'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0255 sec |   0.0030 sec) Finished writing geometry of 'Effect'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0325 sec |   0.0040 sec) Finished writing geometry of 'Effect2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Projectile, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0360 sec |   0.0035 sec) Finished writing geometry of 'Projectile'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0381 sec |   0.0371 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Body' name_q='"Body"' material=<bpy_struct, Material("Body") at 0x00000146F794E808, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146F7BB8408, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146F7BB9E08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146F7BBA608, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146F7BB8408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x00000146F7BBBC08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x00000146F7BB9C08, evaluated>, 'G_CCMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Color") at 0x00000146F7BB9208, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146F7BB9208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x00000146F7BB9608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146F7BB9E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x00000146F7BB9608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146F7BB9C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146F7BBA008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146F7BBA608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146F7BBA008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146F7BBBC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x00000146F7BB8608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['BoBody1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['BoBody1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['BoBody1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['BoBody1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['BoBody1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Head' name_q='"Head"' material=<bpy_struct, Material("Head") at 0x00000146ECCCB888, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146836B3A08, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146836BE608, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146836BC208, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146836B3A08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x00000146836BCC08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x00000146836BC808, evaluated>, 'G_CCMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Color") at 0x00000146836BF208, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146836BF208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x00000146836BDC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146836BE608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x00000146836BDC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146836BC808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146836BE208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146836BC208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146836BE208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146836BCC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x00000146836BDE08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['BoBFace1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['BoBFace1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['BoBFace1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['BoBFace1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['BoBFace1.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bones' name_q='"Bones"' material=<bpy_struct, Material("Bones") at 0x00000146ECBFBD08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x0000014681E34A08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x0000014681E35A08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x0000014681E36E08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x0000014681E34A08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x0000014681E34808, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x0000014681E35C08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x0000014681E36C08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x0000014681E36C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x0000014681E37608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x0000014681E36E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x0000014681E37608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x0000014681E35C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x0000014681E36208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x0000014681E35A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x0000014681E36208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x0000014681E34808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x0000014681E34E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['Bone2.png.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['Bone2.png.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['Bone2.png.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['Bone2.png.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['Bone2.png.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='BallEffect' name_q='"BallEffect"' material=<bpy_struct, Material("BallEffect") at 0x00000146F82A4A08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146DADAB008, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146835DE408, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146835DE208, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146DADAB008, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x00000146DADAB208, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x00000146835DD208, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x00000146835DE808, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146835DE808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x00000146835DE608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146835DE208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x00000146835DE608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146835DD208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146835DD808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146835DE408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146835DD808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146DADAB208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x00000146835DF808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['EffectBall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['EffectBall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.6724435687065125, 0.4564109146595001, 0.3005438446998596, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['EffectBall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['EffectBall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['EffectBall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Projectile' name_q='"Projectile"' material=<bpy_struct, Material("Projectile") at 0x00000146ECC11A88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146837FB408, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146837FB808, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x00000146837FA408, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x00000146837FB408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x00000146837FB608, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x00000146837FA208, evaluated>, 'G_CCMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Color") at 0x00000146837F9A08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146837FA408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x00000146837F9008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146837F9A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x00000146837F9C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146837FA208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146837FA608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x00000146837FB808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x00000146837FA608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x00000146837FB608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x00000146837FBA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'texel0RGB': {'image': bpy.data.images['BoneSpear.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['BoneSpear.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['BoneSpear.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['BoneSpear.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['BoneSpear.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0474 sec |   0.0464 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.anim.order_bones: Skipping non-deform bone MainBodyIK (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone HandIKRight (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone HandIKLeft (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone FaceIK (intended for eg IK bones)
DEBUG:objex.anim.write_skeleton: root bone MainBody at Vector((-3.818044771922785e-30, 0.0, 0.0)) does not start at armature origin
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.5181 sec |   0.5171 sec) Objex Export Finished
