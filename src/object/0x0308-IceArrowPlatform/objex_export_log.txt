WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'E:\\RomhackTool\\z64rom\\src\\object\\0x0308-IceArrowPlatform\\IcePlatformObj.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating GroundIcePlatformObj, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0065 sec |   0.0055 sec) Finished writing geometry of 'GroundIcePlatformObj'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating collision.WaterIcePlatformObj, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0126 sec |   0.0050 sec) Finished writing geometry of 'collision.WaterIcePlatformObj'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating WaterIcePlatformObj, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0158 sec |   0.0033 sec) Finished writing geometry of 'WaterIcePlatformObj'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating collision.GroundIcePlatformObj, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0198 sec |   0.0030 sec) Finished writing geometry of 'collision.GroundIcePlatformObj'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0233 sec |   0.0223 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ice' name_q='"ice"' material=<bpy_struct, Material("ice") at 0x000001D2C078BB88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000001D2CB0B4C08, evaluated>, 'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x000001D2AECABC08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000001D2AECAA608, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000001D2AECA9208, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000001D2CB0B4C08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000001D2AECABA08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000001D2AECAA408, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000001D2AECA9008, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000001D2AECA9008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000001D2AECA8A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000001D2AECA9208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000001D2AECA8A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000001D2AECAA408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000001D2AECA9E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000001D2AECAA608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000001D2AECA9E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000001D2AECABA08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000001D2AECAB208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x000001D2AECABC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000001D2AECAB208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['RGBA16_060002C8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['RGBA16_060002C8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_060002C8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['RGBA16_060002C8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['RGBA16_060002C8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.004' name_q='"Material.004"' material=<bpy_struct, Material("Material.004") at 0x000001D2C0505788, evaluated> face_img=None
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0264 sec |   0.0254 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0284 sec |   0.0274 sec) Objex Export Finished
