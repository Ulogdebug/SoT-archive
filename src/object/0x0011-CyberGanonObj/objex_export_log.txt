WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'E:\\SoTArchieve\\SoT-repo-main\\src\\object\\0x0011-CyberGanonObj\\CyberGanonObj.objex'
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0382 sec |   0.0372 sec) Finished writing geometry of 'CyberGanonObj'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0397 sec |   0.0010 sec) Finished writing geometry of 'CyberGanonSkel'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0459 sec |   0.0052 sec) Finished writing geometry of 'ClubObj'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0469 sec |   0.0469 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red_fabric' name_q='"red_fabric"' material=<bpy_struct, Material("red_fabric") at 0x000002B2B2E27A08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDCF6C08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC80F408, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC80F608, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDCF6C08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDCF7E08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC80F008, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC80D208, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC80D208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC80EA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC80F608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC80EA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC80F008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC80F808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC80F408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC80F808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDCF7E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDCF7008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_red_fabric.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_red_fabric.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.5034797787666321, 0.4361495077610016, 0.2669970691204071, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_red_fabric.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_red_fabric.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_red_fabric.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bodyskin' name_q='"bodyskin"' material=<bpy_struct, Material("bodyskin") at 0x000002B2CDEE8288, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C565CA08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C565C608, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDBF1008, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C565CA08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C565EC08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBF0A08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBF0E08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBF0E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDBF3808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDBF1008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDBF3808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBF0A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDBF1C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C565C608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDBF1C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C565EC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C565DC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_body.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_body.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.7030150890350342, 0.2670494019985199, 0.2624693512916565, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_body.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_body.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_body.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='f3dlite_material.005' name_q='"f3dlite_material.005"' material=<bpy_struct, Material("f3dlite_material.005") at 0x000002B2C539EE08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDE68C08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE6A408, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE6A608, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDE68C08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE6B008, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE6BE08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE6B808, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE6B808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDBF4208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE6A608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDBF4208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE6BE08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDE69C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE6A408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDE69C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE6B008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDE6BA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_leather.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_leather.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 0.6189178824424744, 0.16096971929073334, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_leather.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_leather.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_leather.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chainmail' name_q='"chainmail"' material=<bpy_struct, Material("chainmail") at 0x000002B2C539DA88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDD13C08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD11A08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDC3EA08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDD13C08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD13608, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD10C08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDC3DC08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDC3DC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDC3E008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDC3EA08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDC3E008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD10C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDC3FC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD11A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDC3FC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD13608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDD10608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['00003705.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['00003705.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['00003705.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['00003705.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['00003705.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cape_fastenin' name_q='"cape_fastenin"' material=<bpy_struct, Material("cape_fastenin") at 0x000002B2C539C708, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7A7008, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7A7608, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC732408, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7A7008, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A6208, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A5608, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC732608, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC732608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC733608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC732408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC733608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A5608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7A5208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7A7608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7A5208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7A6208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2DC7A7C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_cape_fastening.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_cape_fastening.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.5031107068061829, 0.31633514165878296, 0.245746910572052, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_cape_fastening.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_cape_fastening.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_cape_fastening.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fur_tuft' name_q='"fur_tuft"' material=<bpy_struct, Material("fur_tuft") at 0x000002B2C5437288, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDD2A008, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD28608, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C55F6A08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDD2A008, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD29608, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD28408, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C55F7208, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C55F7208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C55F6208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C55F6A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C55F6208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD28408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C55F7608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD28608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C55F7608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD29608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDD29208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_fur_tuft.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_fur_tuft.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.5532521605491638, 0.1627882719039917, 0.033309366554021835, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_fur_tuft.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_fur_tuft.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_fur_tuft.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hand' name_q='"hand"' material=<bpy_struct, Material("hand") at 0x000002B2C5435F08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C509BC08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C509AC08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5099808, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C509BC08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C509B408, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C509A008, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5098C08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5098C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C5098808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5099808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C5098808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C509A008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5099A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C509AC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5099A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C509B408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C509AE08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_hand.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_hand.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.7971477508544922, 0.30163565278053284, 0.2969639301300049, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_hand.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_hand.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_hand.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='eye' name_q='"eye"' material=<bpy_struct, Material("eye") at 0x000002B2C5434B88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDE7B208, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE7A808, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE02408, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDE7B208, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE79408, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE7A408, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE03808, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE03808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDE02C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE02408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDE02C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE7A408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDE7BC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDE7A808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDE7BC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDE79408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDE79808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_eye_open.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_eye_open.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'vertex_colors', 'vertex_color_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 0.0, 0.002871431177482009, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_eye_open.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_eye_open.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_eye_open.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='leather_tlu' name_q='"leather_tlu"' material=<bpy_struct, Material("leather_tlu") at 0x000002B2C5483288, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDBEE408, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDBECC08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDDF2608, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDBEE408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBEDE08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBECA08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDDF1C08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDDF1C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDDF1208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDDF2608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDDF1208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBECA08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDBEC408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDBECC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDBEC408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDBEDE08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDBED808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_leather_tlut.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_leather_tlut.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_leather_tlut.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_leather_tlut.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_leather_tlut.rgba16.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hoof' name_q='"hoof"' material=<bpy_struct, Material("hoof") at 0x000002B2C5481F08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C5013208, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5011208, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5012208, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C5013208, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5013E08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5012408, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5012008, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5012008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDE88208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5012208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDE88208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5012408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5011E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5011208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5011E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5013E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C5010408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_hoof.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_hoof.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.7012197971343994, 0.3837451934814453, 0.11226853728294373, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_hoof.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_hoof.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_hoof.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wire' name_q='"wire"' material=<bpy_struct, Material("wire") at 0x000002B2C5480B88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C566C408, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50F7408, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50F5608, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C566C408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50F7C08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50F6A08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50F5E08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50F5E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C50F4E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50F5608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C50F4E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50F6A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C50F6208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C50F7408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C50F6208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C50F7C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C50F7608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['Rusty_Metal_Wall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['Rusty_Metal_Wall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.38053831458091736, 0.3693014681339264, 0.5446891784667969, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['Rusty_Metal_Wall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['Rusty_Metal_Wall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['Rusty_Metal_Wall.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=<bpy_struct, Material("metal") at 0x000002B2CDBC7708, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7F3808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7F0C08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7F0E08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7F3808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7F3408, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7F0808, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7F1608, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7F1608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC7BEE08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7F0E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC7BEE08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7F0808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7F2008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7F0C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7F2008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7F3408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2DC7F2A08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.5707858800888062, 0.4882466793060303, 0.3640543222427368, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='pipe' name_q='"pipe"' material=<bpy_struct, Material("pipe") at 0x000002B2CDBC6388, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDDCAA08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDDC9408, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDDCAC08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDDCAA08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDDC9E08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDDC9C08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7FC608, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7FC608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC7FD208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDDCAC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC7FD208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDDC9C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDDC8608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDDC9408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDDC8608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDDC9E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDDCB008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.7412168979644775, 0.3380769193172455, 0.377280592918396, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images["ZELDA MAJORA'S MASK#7CE4B6D5#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metalplate' name_q='"metalplate"' material=<bpy_struct, Material("metalplate") at 0x000002B2CDBC5008, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDEB4808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD89808, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD88408, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDEB4808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEB5A08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD89608, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD88208, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD88208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDD8BA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD88408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDD8BA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDD89608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDD89008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDD89808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDD89008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDEB5A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDEB5408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images["ZELDA MAJORA'S MASK#84543949#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images["ZELDA MAJORA'S MASK#84543949#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.3137177526950836, 0.2812672257423401, 0.45552799105644226, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images["ZELDA MAJORA'S MASK#84543949#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images["ZELDA MAJORA'S MASK#84543949#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images["ZELDA MAJORA'S MASK#84543949#0#2_all.png"], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fan' name_q='"fan"' material=<bpy_struct, Material("fan") at 0x000002B2CDBDBB88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7B7808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7B4C08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7B7008, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC7B7808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7B4A08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7B5A08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7B5408, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7B5408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC7B4408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7B7008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC7B4408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7B5A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7B6608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC7B4C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC7B6608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC7B4A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2DC7B7208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['00009906.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['00009906.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 0.5958083868026733, 0.24270488321781158, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['00009906.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['00009906.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['00009906.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gem' name_q='"gem"' material=<bpy_struct, Material("gem") at 0x000002B2CDBDA808, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DCA6C808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DCA6E008, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DCA6F408, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DCA6C808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DCA6CE08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DCA6E208, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DCA6F608, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DCA6F608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DCA6FC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DCA6F408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DCA6FC08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DCA6E208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DCA6E808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DCA6E008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DCA6E808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DCA6CE08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2DCA6D408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_eye_half.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_eye_half.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'vertex_colors', 'vertex_color_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.5617159008979797, 0.0, 0.009869512170553207, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_eye_half.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_eye_half.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_eye_half.ci4.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal2' name_q='"metal2"' material=<bpy_struct, Material("metal2") at 0x000002B2CDBD9488, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC8F9008, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC8FA808, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC8FBC08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2DC8F9008, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC8F9608, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC8FAA08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC8FBE08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC8FBE08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDAC4608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC8FBC08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CDAC4608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC8FAA08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC8FB008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC8FA808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2DC8FB008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC8F9608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2DC8F9C08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['00010285.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['00010285.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.5384127497673035, 0.5973794460296631, 0.49518564343452454, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['00010285.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['00010285.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['00010285.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='TitleCard' name_q='"TitleCard"' material=<bpy_struct, Material("TitleCard") at 0x000002B2CDBD8108, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CD85D808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CD85F008, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CD858608, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CD85D808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CD85DE08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CD85F208, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CD858808, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CD858808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CD858E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CD858608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2CD858E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CD85F208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CD85F808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CD85F008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CD85F808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CD85DE08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CD85E408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['ganon_title_card.ia8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ganon_title_card.ia8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ganon_title_card.ia8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ganon_title_card.ia8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ganon_title_card.ia8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.001' name_q='"metal.001"' material=<bpy_struct, Material("metal.001") at 0x000002B2C56A1308, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C56CF408, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5708E08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C570A208, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C56CF408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C56CFA08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5709008, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C570A408, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C570A408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C570AA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C570A208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C570AA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5709008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5709608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5708E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5709608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C56CFA08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C5708208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.4538843631744385, 0.4538843631744385, 0.4538843631744385, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['MetalDeco6.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture MetalDeco6.png <bpy_struct, Image("MetalDeco6.png") at 0x000002B2DD497908>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='line' name_q='"line"' material=<bpy_struct, Material("line") at 0x000002B2C56A0408, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDCD9808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDCD9A08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC9D9C08, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2CDCD9808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDCD9008, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDCDBE08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC9DB808, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2DC9DB808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC9DBA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2DC9D9C08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2DC9DBA08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDCDBE08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDCDB808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2CDCD9A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2CDCDB808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2CDCD9008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2CDCD9408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['00001095.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['00001095.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.40903469920158386, 0.33348187804222107, 0.2887943387031555, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['00001095.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['00001095.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['00001095.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material' name_q='"Material"' material=<bpy_struct, Material("Material") at 0x000002B2DC8E6F88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C528AC08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5247E08, evaluated>, 'G_ACMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5255008, evaluated>, 'G_CCMUX_0': <bpy_struct, NodeSocketColor("0") at 0x000002B2C528AC08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5247A08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5245E08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5255808, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5255808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C5254808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5255008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x000002B2C5254808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5245E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5245408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x000002B2C5247E08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x000002B2C5245408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x000002B2C5247A08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x000002B2C5246E08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['GC-0x4580_32x64_I8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['GC-0x4580_32x64_I8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'vertex_colors', 'vertex_color_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 0.0018566757207736373, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['GC-0x4580_32x64_I8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['GC-0x4580_32x64_I8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['GC-0x4580_32x64_I8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0836 sec |   0.0836 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.anim.order_bones: Skipping non-deform bone outterclub (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone controlroot (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone elbowIK.r (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone dummyroot (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone kneelIK.l (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone footIK.l (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone footIK.r (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone kneelIK.r (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone handIK.l (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone elbowIK.l (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone handIK.r (intended for eg IK bones)
DEBUG:objex.anim.write_skeleton: root bone root at Vector((-1.8189894035458565e-12, 59.57038497924805, -13.378510475158691)) does not start at armature origin
INFO:objex.OBJEX_OT_export.progress_report_print:     (  1.2615 sec |   1.2615 sec) Objex Export Finished
